version: 2.1

orbs:
  gcp-gcr: circleci/gcp-gcr@0.15.0
  gcp-cli: circleci/gcp-cli@3.0.1
  kubernetes: circleci/kubernetes@1.3.1

jobs:
  lint-and-test:
    working_directory: ~/repo
    docker:
      - image: cimg/go:1.19.5
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: |
            go mod download
            go install honnef.co/go/tools/cmd/staticcheck@latest
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Run lint
          command: staticcheck ./...
      - run:
          name: Prepare for docker build
          command: |
            mkdir -p /tmp/output
            cp -r . /tmp/output
      - persist_to_workspace:
          root: /tmp/output
          paths:
            - .
  build-and-deploy:
    executor: gcp-gcr/default
    steps:
      - checkout
      - gcp-gcr/gcr-auth:
          gcloud-service-key: GCLOUD_SERVICE_KEY
          google-compute-region: GCP_REGION
          google-compute-zone: GCP_ZONE
          google-project-id: GOOGLE_PROJECT_ID
          registry-url: $GAR_REGISTRY_URL
      - kubernetes/install-kubectl
      - gcp-cli/setup:
          gcloud_service_key: GCLOUD_SERVICE_KEY
          google_project_id: GOOGLE_PROJECT_ID
      - gcp-gcr/build-image:
          attach-workspace: true
          docker-context: .
          dockerfile: Dockerfile.prod
          google-project-id: GOOGLE_PROJECT_ID
          image: $GAR_IMAGE_REPO/api
          path: .
          registry-url: $GAR_REGISTRY_URL
          workspace-root: /tmp/output
          tag: $CIRCLE_SHA1
      - gcp-gcr/push-image:
          google-project-id: GOOGLE_PROJECT_ID
          image: $GAR_IMAGE_REPO/api
          registry-url: $GAR_REGISTRY_URL
          tag: $CIRCLE_SHA1
      - gcp-gcr/tag-image:
          google-project-id: GOOGLE_PROJECT_ID
          image: $GAR_IMAGE_REPO/api
          registry-url: $GAR_REGISTRY_URL
          source-tag: $CIRCLE_SHA1
          target-tag: latest
      - run:
          name: Deploy to GKE
          command: |
            gcloud container clusters get-credentials ${GKE_CLUSTER_NAME} --region ${GCP_REGION} --project ${GOOGLE_PROJECT_ID}
      - kubernetes/update-container-image:
          container-image-updates: deployment/api=$GAR_IMAGE_REPO/api:$CIRCLE_SHA1
          get-rollout-status: true
          resource-name: deployment/api

workflows:
  test:
    jobs:
      - lint-and-test:
          filters:
            branches:
              ignore:
                - main
  deploy-dev:
    when:
      equal: [main, << pipeline.git.branch >>]
    jobs:
      - lint-and-test:
          context: dev
      - build-and-deploy:
          context: dev
          requires:
            - lint-and-test
          filters:
            branches:
              only: main